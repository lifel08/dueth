<%= javascript_pack_tag 'calendar_availabilities' , 'data-turbolinks-track': 'reload', defer: true %>
<div id="calendar" style="height: 600px;"></div>

<script>

    let eventsData = [];
    <% @instrument_availabilities.each do |instrument_availability| %>
    eventsData.push({
        id: "<%= instrument_availability.id %>",
        start: "<%= instrument_availability.availability.start_datetime %>",
        end: "<%= instrument_availability.availability.end_datetime %>",
        title: "<%= instrument_availability.instrument.title %>",
        status: "<%= instrument_availability.status %>"
    })
    <% end %>

    let instrument_id;
    instrument_id = <%= @instrument.id %>;
    let uri;
    uri= '<%= ENV.fetch('HOST_URL') %>'
    console.log("i am uri",uri)


    let currentUser= "<%= current_user.id %>"

    let comparedUser= "<%= @instrument_availabilities&.last&.instrument&.user_id %>"
    let events;
    events= []

    events.push( <%=  @instrument_availabilities.where(status: 'pending').ids  %> )
    function setBooking(data) {

        const request =(uri + instrument_id + '/instrument_bookings')

        fetch(request, {

            // Adding method type
            method: "POST",

            // Adding body or contents to send
            body: JSON.stringify({
                // availability_id: "test",
                availability_id: data.schedule.id,
            }),

            // Adding headers to the request
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })

          // Converting to JSON
          .then((response) => {
              window.location.reload();
              console.log('Do something here', response)
          })

        // document.getElementsByClassName('tui-full-calendar-popup-container').removeChild(input.parentNode);
    }
    function cancelBooking(data) {

        const request = (uri + instrument_id + '/instrument_bookings/'+ data.schedule.id+ '/cancel')

        fetch(request, {

            // Adding method type
            method: "PATCH",

            // Adding body or contents to send
            body: JSON.stringify({
                // availability_id: "test",
                availability_id: data.schedule.id,
            }),

            // Adding headers to the request
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })

          // Converting to JSON
          .then((response) => {
              window.location.reload();
              console.log('Do something here', response)
          })

    }

</script>